{
  "version": 3,
  "sources": ["empty-module:~/components/Editor.client", "<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/components/contexts/SocketContext.tsx", "../../app/routes/api.user.$username.tsx", "../../app/service/db.server.ts", "../../app/model/user.ts", "../../app/routes/admin_.$slug.tsx", "../../app/lib/checkUnknown.ts", "../../app/lib/utils.ts", "../../app/lib/insertHtmlOnText.ts", "../../app/components/AdminHistorySidebar.tsx", "../../app/components/TextInfo.tsx", "../../app/components/History.tsx", "../../app/lib/sortReviewedUpdate.ts", "../../app/components/svgs/index.tsx", "../../app/components/Button.tsx", "../../app/tiptapProps/useEditorTiptap.tsx", "../../app/tiptapProps/events.ts", "../../app/tiptapProps/extension/character.ts", "../../app/tiptapProps/extension/space.ts", "../../app/routes/api.text.tsx", "../../app/lib/server.sendDiscordNotification.ts", "../../app/model/group.ts", "../../app/model/text.ts", "../../app/routes/api.user.tsx", "../../app/routes/api.word.tsx", "../../app/routes/_index.tsx", "../../app/components/Sidebar.tsx", "../../app/components/hooks/useOnlineCount.tsx", "../../app/routes/admin.tsx", "../../app/routes/error.tsx", "../../app/routes/demo.tsx", "../../app/components/demo/Sidebar.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport React, { useEffect, useState } from \"react\";\nimport tailwindStyle from \"./styles/tailwind.css\";\nimport globalStyle from \"./styles/global.css\";\nimport { SocketProvider, connect } from \"./components/contexts/SocketContext\";\nimport { io } from \"socket.io-client\";\nimport type { Socket } from \"socket.io-client\";\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: tailwindStyle },\n{ rel: \"stylesheet\", href: globalStyle }];\n\nexport default function App() {\n  const [socket, setSocket] = useState<Socket>();\n\n  useEffect(() => {\n    const socket = connect();\n    setSocket(socket);\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\"confirmation\", (data) => {});\n  }, [socket]);\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"m-0 overflow-hidden font-[20px]\">\n        <SocketProvider socket={socket}>\n          <Outlet />\n        </SocketProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport function ErrorBoundary({ error }) {\n  console.error(error);\n  return (\n    <html>\n      <head>\n        <title>Oh no!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {/* add the UI you want your users to see */}\n        <Scripts />\n      </body>\n    </html>);\n\n}", "import type { ReactNode } from \"react\";\r\nimport { createContext, useContext } from \"react\";\r\nimport { io, type Socket } from \"socket.io-client\";\r\n\r\ntype ProviderProps = {\r\n  socket: Socket | undefined;\r\n  children: ReactNode;\r\n};\r\n\r\nconst context = createContext<Socket | undefined>(undefined);\r\n\r\nexport function useSocket() {\r\n  return useContext(context);\r\n}\r\nexport function connect() {\r\n  return io();\r\n}\r\n\r\nexport function SocketProvider({ socket, children }: ProviderProps) {\r\n  return <context.Provider value={socket}>{children}</context.Provider>;\r\n}\r\n", "import { LoaderFunction } from \"@remix-run/node\";\r\nimport { getUser } from \"~/model/user\";\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  let username = params.username!;\r\n  return { users: await getUser(username) };\r\n};\r\n", "import { PrismaClient } from '@prisma/client';\r\n\r\nlet db: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db__: PrismaClient;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\n// in production we'll have a single connection to the DB.\r\nif (process.env.NODE_ENV === 'production') {\r\n  db = new PrismaClient();\r\n} else {\r\n  if (!global.__db__) {\r\n    global.__db__ = new PrismaClient();\r\n  }\r\n  db = global.__db__;\r\n\r\n  db.$connect();\r\n}\r\n\r\n\r\nexport { db };\r\n", "import { Role } from \"@prisma/client\";\r\nimport { db } from \"~/service/db.server\";\r\n\r\nexport const createUserIfNotExists = async (username: string) => {\r\n  const existingUser = await db.user.findUnique({\r\n    where: {\r\n      username: username,\r\n    },\r\n    include: {\r\n      text: true,\r\n      ignored_list: true,\r\n      rejected_list: true,\r\n    },\r\n  });\r\n\r\n  if (existingUser) {\r\n    return existingUser;\r\n  } else {\r\n    const newUser = await db.user.create({\r\n      data: {\r\n        username: username,\r\n        nickname: username.split(\"@\")[0],\r\n      },\r\n      include: {\r\n        text: true,\r\n      },\r\n    });\r\n\r\n    return newUser;\r\n  }\r\n};\r\n\r\nexport const getUsers = async () => {\r\n  try {\r\n    let users = await db.user.findMany({\r\n      include: {\r\n        text: true,\r\n        rejected_list: true,\r\n        ignored_list: true,\r\n      },\r\n    });\r\n    return users;\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport const getUser = async (username: string) => {\r\n  try {\r\n    let user = db.user.findUnique({\r\n      where: {\r\n        username,\r\n      },\r\n      include: {\r\n        text: true,\r\n        rejected_list: true,\r\n        ignored_list: true,\r\n      },\r\n    });\r\n    return user;\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport const updateUserNickname = async (id: string, name: string) => {\r\n  try {\r\n    let user = await db.user.update({\r\n      where: {\r\n        id,\r\n      },\r\n      data: {\r\n        nickname: name,\r\n      },\r\n    });\r\n    return user;\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\nexport const updateUserAssign = async (id: string, allow: boolean) => {\r\n  try {\r\n    let user = await db.user.update({\r\n      where: {\r\n        id,\r\n      },\r\n      data: {\r\n        allow_assign: allow,\r\n      },\r\n    });\r\n    return user;\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport const removeBatchFromUser = async (batch: number, id: string) => {\r\n  //check if all text inside batch is either ignored by user or reviewed;\r\n\r\n  try {\r\n    const user = await db.user.findUnique({\r\n      where: { id },\r\n      include: { ignored_list: true },\r\n    });\r\n    let isAllIgnored = await areAllTextsIgnoredOrReviewed(id, batch);\r\n    if (!user) throw new Error(\"user not found\");\r\n    if (isAllIgnored) {\r\n      const updatedAssignedBatchs = user.assigned_batch.filter(\r\n        (number) => number !== batch\r\n      );\r\n\r\n      let updatedUser = await db.user.update({\r\n        where: {\r\n          id,\r\n        },\r\n        data: {\r\n          assigned_batch: updatedAssignedBatchs,\r\n        },\r\n      });\r\n      return updatedUser;\r\n    }\r\n    return null;\r\n  } catch (e) {\r\n    throw new Error(\"cannot add group\" + e);\r\n  }\r\n};\r\n\r\nasync function areAllTextsIgnoredOrReviewed(userId: string, batchId: number) {\r\n  const user = await db.user.findUnique({\r\n    where: { id: userId },\r\n    include: {\r\n      ignored_list: { where: { batch: batchId } },\r\n      text: { where: { batch: batchId } },\r\n    },\r\n  });\r\n\r\n  if (!user) {\r\n    throw new Error(\"User not found\");\r\n  }\r\n  let approved_count = user.text.length;\r\n  let reviewed_count = user.text.filter((l) => l.reviewed).length;\r\n  if (approved_count === reviewed_count) return true;\r\n  const ignoredTexts = await db.text.findMany({\r\n    where: {\r\n      batch: batchId,\r\n      ignored_by: { some: { username: { equals: user.username } } },\r\n    },\r\n    include: {\r\n      ignored_by: true,\r\n    },\r\n  });\r\n\r\n  const ignoredTextIds = ignoredTexts.map((text) => text.id);\r\n\r\n  const remainingTexts = await db.text.findMany({\r\n    where: {\r\n      batch: batchId,\r\n      NOT: {\r\n        id: { in: ignoredTextIds },\r\n      },\r\n    },\r\n  });\r\n\r\n  // Check if all texts in the batch are either ignored or reviewed\r\n  const allIgnoredOrReviewed = remainingTexts.every((text) => {\r\n    return text.reviewed === true;\r\n  });\r\n\r\n  return allIgnoredOrReviewed;\r\n}\r\n\r\nexport async function remainingTextToApproved(userId: string) {\r\n  let remains = await db.user.findUnique({\r\n    where: { id: userId },\r\n    select: { assigned_batch: true },\r\n  });\r\n  let lastbatch = remains?.assigned_batch.at(-1);\r\n  let text = await db.text.findMany({\r\n    where: {\r\n      batch: lastbatch,\r\n    },\r\n    select: { id: true, status: true, reviewed: true },\r\n  });\r\n  let remaining_count = text.filter((t) => t.status !== \"APPROVED\").length;\r\n  let not_reviewed_count = text.filter((t) => t.reviewed === false).length;\r\n\r\n  return { remaining_count, not_reviewed_count };\r\n}\r\n", "import { DataFunctionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useFetcher } from \"@remix-run/react\";\r\nimport { useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { LoaderFunction, useLoaderData } from \"react-router\";\r\nimport checkUnknown from \"~/lib/checkUnknown\";\r\nimport insertHTMLonText from \"~/lib/insertHtmlOnText\";\r\nimport { getUser } from \"~/model/user\";\r\nimport { Character } from \"~/tiptapProps/extension/character\";\r\nimport { editorProps } from \"~/tiptapProps/events\";\r\nimport AdminHistorySidebar from \"~/components/AdminHistorySidebar\";\r\nimport { ClientOnly } from \"remix-utils\";\r\nimport EditorContainer from \"~/components/Editor.client\";\r\nimport Button from \"~/components/Button\";\r\nimport { db } from \"~/service/db.server\";\r\nimport { Space } from \"~/tiptapProps/extension/space\";\r\nimport { sortUpdate_reviewed } from \"~/lib/sortReviewedUpdate\";\r\nimport { useEditorTiptap } from \"~/tiptapProps/useEditorTiptap\";\r\nimport { useSocket } from \"~/components/contexts/SocketContext\";\r\n\r\nexport const loader = async ({ request, params }: DataFunctionArgs) => {\r\n  let url = new URL(request.url);\r\n  let session = url.searchParams.get(\"session\");\r\n  let admin = await getUser(session!);\r\n  let user = await getUser(params.slug!);\r\n  let text_data = await db.text.findMany({\r\n    where: { modified_by_id: user?.id, status: \"APPROVED\", reviewed: false },\r\n    orderBy: { updatedAt: \"desc\" },\r\n  });\r\n  let currentText = await db.text.findFirst({\r\n    where: { reviewed: false, modified_by_id: user?.id, status: \"APPROVED\" },\r\n    orderBy: { id: \"asc\" },\r\n  });\r\n\r\n  return { user, admin, text_data, id_now: currentText?.id };\r\n};\r\n\r\ntype LoaderType = Awaited<ReturnType<typeof loader>>;\r\n\r\nfunction UserDetail() {\r\n  const fetcher = useFetcher();\r\n  const data = useLoaderData();\r\n  const { user, text_data, admin, id_now } = data as LoaderType;\r\n  let text = text_data?.sort((a, b) =>\r\n    a.reviewed === b.reviewed ? 0 : !a.reviewed ? 1 : -1\r\n  );\r\n  const socket = useSocket();\r\n  const [content, setContent] = useState(\"\");\r\n  const [selectedId, setSelectedId] = useState<number | undefined>(id_now);\r\n  useEffect(() => {\r\n    setSelectedId(id_now);\r\n  }, [id_now]);\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    let display = selectedId\r\n      ? user.text.find((d) => d.id === selectedId)\r\n      : user.text.sort(sortUpdate_reviewed).find((d) => d.id === text.id);\r\n    if (display) {\r\n      let show =\r\n        JSON.parse(display?.modified_text!)?.join(\" \") ||\r\n        display?.original_text;\r\n      setContent(show);\r\n    }\r\n  }, [selectedId]);\r\n  let insertHTML = insertHTMLonText(content);\r\n  let newText = checkUnknown(insertHTML);\r\n  let textMemo = useMemo(() => {\r\n    if (newText) return newText;\r\n  }, [newText]);\r\n  let editor = useEditorTiptap(textMemo);\r\n\r\n  if (!editor) return null;\r\n  function text_reviewed() {\r\n    setTimeout(() => {\r\n      socket?.emit(\"reviewed\", { user });\r\n    }, 1000);\r\n  }\r\n  let saveText = async () => {\r\n    fetcher.submit(\r\n      {\r\n        id: selectedId!,\r\n        modified_text: editor?.getText(),\r\n        userId: user.id,\r\n        adminId: admin?.id,\r\n      },\r\n      { method: \"POST\", action: \"/api/text\" }\r\n    );\r\n    text_reviewed();\r\n  };\r\n\r\n  let rejectTask = async () => {\r\n    fetcher.submit(\r\n      { id: selectedId!, userId: user.id, _action: \"reject\", admin: true },\r\n      { method: \"PATCH\", action: \"/api/text\" }\r\n    );\r\n    text_reviewed();\r\n  };\r\n  let isButtonDisabled = text.length < 1;\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row\">\r\n      <AdminHistorySidebar\r\n        user={user}\r\n        selectedId={selectedId!}\r\n        setSelectedId={setSelectedId}\r\n      />\r\n\r\n      <div className=\"flex-1 flex items-center flex-col md:mt-[10vh]\">\r\n        {!text || !selectedId || !editor ? (\r\n          <div className=\"fixed top-[150px] md:static shadow-md max-h-[450px] w-[90%] rounded-sm md:h-[54vh]\">\r\n            Thank you . your work is complete ! \uD83D\uDE0A\uD83D\uDE0A\uD83D\uDE0A\r\n          </div>\r\n        ) : (\r\n          <div className=\"fixed bottom-[150px] md:static shadow-md max-h-[450px] w-[90%] rounded-sm md:h-[54vh]\">\r\n            <div className=\"flex items-center justify-between opacity-75 text-sm font-bold px-2 capitalize pt-1 \">\r\n              transcript\r\n            </div>\r\n            <ClientOnly fallback={null}>\r\n              {() => <EditorContainer editor={editor!} />}\r\n            </ClientOnly>\r\n            {!editor && <div>loading...</div>}\r\n          </div>\r\n        )}\r\n        <ClientOnly fallback={null}>\r\n          {() => (\r\n            <div className=\"flex gap-2 fixed bottom-0 justify-center\">\r\n              <Button\r\n                disabled={isButtonDisabled}\r\n                handleClick={saveText}\r\n                value=\"CONFIRM\"\r\n                title=\"CONFIRM (a)\"\r\n                shortCut=\"a\"\r\n              />\r\n              <Button\r\n                disabled={isButtonDisabled}\r\n                handleClick={rejectTask}\r\n                value=\"REJECT\"\r\n                title=\"REJECT (x)\"\r\n                shortCut=\"x\"\r\n              />\r\n            </div>\r\n          )}\r\n        </ClientOnly>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDetail;\r\n", "\r\nfunction checkUnknown(text: string) {\r\n    const replacementChar = \"\\ufffd\";\r\n    if (text.includes(replacementChar)){\r\n     const regex = new RegExp(replacementChar, \"g\");\r\n      const newStr = text.replace(regex, \"\");\r\n    // Refresh the data (e.g., reload it from a source)\r\n    return newStr; // Indicates that the data was refreshed\r\n  } else {\r\n    return text; // Indicates that the data was not refreshed\r\n  }\r\n}\r\n\r\nexport default checkUnknown;\r\n", "export function replaceSpacesWithHTMLTag(text: string) {\r\n  const tag = \"<Space data-color='red'> </Space>\";\r\n  const replacedText = text.replace(/\\s/g, tag);\r\n  return replacedText;\r\n}\r\n\r\nexport function checkContentChange(oldText: string, newText: string) {\r\n  return oldText === newText;\r\n}\r\n\r\nexport function removeSpace(text: string) {\r\n  return text.replace(/\\s/g, \"\");\r\n}\r\n", "import { replaceSpacesWithHTMLTag } from \"./utils\";\r\n\r\nfunction insertHTMLonText(text: string) {\r\n  let split = splitText(text);\r\n  let length = 0;\r\n  let textHTML = \"\";\r\n  split.forEach((word, index) => {\r\n    if (word === \" \") {\r\n      textHTML += replaceSpacesWithHTMLTag(word);\r\n    } else {\r\n      textHTML += `<Character class='seg s-${length}'>${word}</Character>`;\r\n    }\r\n    length += word.length;\r\n  });\r\n  return textHTML;\r\n}\r\n\r\nfunction splitText(text: string) {\r\n  let splitText = text.match(/[^\u0F0B\u0F0D\\s]+|[\u0F0B\u0F0D\\s]/g);\r\n  var mergedArray = [];\r\n  if (splitText)\r\n    for (var i = 0; i < splitText.length; i++) {\r\n      if (/[\u0F0B\u0F0D]/.test(splitText[i])) {\r\n        if (mergedArray.length > 0) {\r\n          mergedArray[mergedArray.length - 1] += splitText[i];\r\n        } else {\r\n          mergedArray.push(splitText[i]);\r\n        }\r\n      } else {\r\n        mergedArray.push(splitText[i]);\r\n      }\r\n    }\r\n\r\n  if (mergedArray[mergedArray.length - 1] === \"undefined\u0F0B\") {\r\n    mergedArray.pop();\r\n  }\r\n  let return_data = mergedArray.map((word) => {\r\n    if (word.startsWith(\" \")) {\r\n      let temp = word.replace(\" \", \"\");\r\n      return [\" \", temp];\r\n    }\r\n    return word;\r\n  });\r\n  return return_data.flat();\r\n}\r\n\r\nexport default insertHTMLonText;\r\n", "import { Link, useLoaderData, useRevalidator } from \"@remix-run/react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { historyText } from \"./Sidebar\";\r\nimport TextInfo from \"./TextInfo\";\r\nimport { AdminHistoryItem } from \"./History\";\r\nimport { sortUpdate_reviewed } from \"~/lib/sortReviewedUpdate\";\r\nimport { Hamburger, Tick } from \"./svgs\";\r\nimport { useSocket } from \"./contexts/SocketContext\";\r\n\r\ninterface SidebarProps {\r\n  user: any;\r\n  setSelectedId: (data: number | undefined) => void;\r\n  selectedId: number | undefined;\r\n}\r\n\r\nfunction AdminHistorySidebar({\r\n  user,\r\n  setSelectedId,\r\n  selectedId,\r\n}: SidebarProps) {\r\n  const data = useLoaderData();\r\n  const socket = useSocket();\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const reval = useRevalidator();\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"text-status-changed\", (data) => {\r\n      reval.revalidate();\r\n    });\r\n  }, [socket]);\r\n  const SidebarHeader = () => (\r\n    <div className=\"flex bg-[#384451] px-2 py-3 items-center justify-between md:hidden\">\r\n      <Link to={`/admin?session=${data.admin.username}`}>\r\n        <div className=\"cursor-pointer\">Word segmentation</div>\r\n      </Link>\r\n      <div className=\"close\" onClick={() => setOpenMenu(false)}>\r\n        x\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div\r\n        className=\"flex px-2 py-3 text-white bg-gray-600 text-lg font-semibold items-center  gap-2 \"\r\n        onClick={() => setOpenMenu(true)}\r\n      >\r\n        <Hamburger />\r\n        <Link\r\n          to={`/admin?session=${data.admin.username}`}\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n        >\r\n          Word segmentation\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className={`flex flex-col text-white bg-[#54606e] overflow-y-auto overflow-x-hidden max-h-[100vh] transition-all -translate-x-full z-30 ${\r\n          openMenu ? \"block translate-x-0\" : \"\"\r\n        } min-h-[100vh] w-[260px] md:translate-x-0`}\r\n      >\r\n        <div className=\"px-2 flex gap-2 flex-col border-b-2 border-b-[#384451] mb-3 pb-2 mt-2 \">\r\n          <SidebarHeader />\r\n          <Link\r\n            to={`/admin?session=${data?.admin.username}`}\r\n            className=\"decoration-0 text-white bg-gray-500 h-fit px-2 py-1 \"\r\n          >\r\n            ADMIN\r\n          </Link>\r\n          <TextInfo>User : {user?.username}</TextInfo>\r\n          <TextInfo>text id :{selectedId}</TextInfo>\r\n          <TextInfo>Approved :{user?.text?.length}</TextInfo>\r\n          <TextInfo>Rejected :{user?.rejected_list?.length}</TextInfo>\r\n          <TextInfo>\r\n            Reviewed : {user?.text.filter((r) => r.reviewed)?.length}\r\n          </TextInfo>\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"text-sm mb-2 font-bold\">History</div>\r\n          <div className=\"flex flex-col gap-2 max-h-[30vh] overflow-y-auto\">\r\n            {user &&\r\n              user.text &&\r\n              [...(user?.text || [])]\r\n                .sort(sortUpdate_reviewed)\r\n                .map((text: historyText) => (\r\n                  <AdminHistoryItem\r\n                    id={text?.id}\r\n                    key={text.id + \"-accepted\"}\r\n                    onClick={() => {\r\n                      setOpenMenu(false);\r\n                      setSelectedId(text?.id);\r\n                    }}\r\n                    icon={<Tick />}\r\n                    reviewed={text?.reviewed!}\r\n                    selectedId={selectedId!}\r\n                  />\r\n                ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHistorySidebar;\r\n", "export default function TextInfo({ children }) {\r\n  return (\r\n    <div className=\"text-white uppercase text-sm font-bold mb-2\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n", "import { Link, useLoaderData } from \"@remix-run/react\";\r\ninterface HistoryItemProps {\r\n  id: number;\r\n  user: any;\r\n  onClick: () => void;\r\n  icon: JSX.Element;\r\n  disabled?: boolean;\r\n}\r\ninterface AdminHistoryItemProps {\r\n  id: number;\r\n  onClick: () => void;\r\n  icon: JSX.Element;\r\n  reviewed: boolean;\r\n  selectedId: number;\r\n}\r\nfunction HistoryItem({ id, user, onClick, icon, disabled }: HistoryItemProps) {\r\n  const { history } = useLoaderData();\r\n  if (disabled)\r\n    return (\r\n      <div className=\"px-2 text-white flex gap-3 cursor-pointer hover:border-2 border-purple-800\">\r\n        {id} {icon}\r\n      </div>\r\n    );\r\n  return (\r\n    <Link\r\n      to={`/?session=${user.username}&history=${id}`}\r\n      className={`px-2 flex gap-3 items-center ${\r\n        history == id ? \"bg-gray-700\" : \"\"\r\n      }`}\r\n      onClick={onClick}\r\n    >\r\n      {id} {icon}\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction AdminHistoryItem({\r\n  id,\r\n  onClick,\r\n  icon,\r\n  reviewed,\r\n  selectedId,\r\n}: AdminHistoryItemProps) {\r\n  return (\r\n    <div\r\n      className=\"text-white flex gap-3 cursor-pointer hover:border-2 border-purple-800\"\r\n      style={{\r\n        background: selectedId == id ? \"rgba(1,1,1,0.4)\" : \"\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      {id}\r\n      {reviewed ? icon : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DemoHistoryItem({\r\n  id,\r\n  user,\r\n  onClick,\r\n  icon,\r\n  disabled,\r\n}: HistoryItemProps) {\r\n  if (disabled)\r\n    return (\r\n      <div className=\"text-white flex gap-3 cursor-pointer hover:border-2 border-purple-800\">\r\n        {id} {icon}\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"history-item flex gap-3 items-center\" onClick={onClick}>\r\n      {id} {icon}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { HistoryItem, AdminHistoryItem, DemoHistoryItem };\r\n", "import { Text } from \"@prisma/client\";\r\n\r\nexport function sortUpdate_reviewed(a: Text, b: Text) {\r\n  const parsedDate1 = new Date(a.updatedAt).valueOf();\r\n  const parsedDate2 = new Date(b.updatedAt).valueOf();\r\n  if (a.reviewed === b.reviewed) {\r\n    return parsedDate2 - parsedDate1;\r\n  }\r\n  if (a.reviewed) {\r\n    return 1;\r\n  }\r\n  if (b.reviewed) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n", "export function Hamburger() {\r\n  return (\r\n    <svg\r\n      className=\"inline-block mr-2 cursor-pointer md:hidden \"\r\n      aria-hidden=\"true\"\r\n      fill=\"gray\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M3 5h18q0.414 0 0.707 0.293t0.293 0.707-0.293 0.707-0.707 0.293h-18q-0.414 0-0.707-0.293t-0.293-0.707 0.293-0.707 0.707-0.293zM3 17h18q0.414 0 0.707 0.293t0.293 0.707-0.293 0.707-0.707 0.293h-18q-0.414 0-0.707-0.293t-0.293-0.707 0.293-0.707 0.707-0.293zM3 11h18q0.414 0 0.707 0.293t0.293 0.707-0.293 0.707-0.707 0.293h-18q-0.414 0-0.707-0.293t-0.293-0.707 0.293-0.707 0.707-0.293z\"></path>\r\n    </svg>\r\n  );\r\n}\r\nexport function Crossburger() {\r\n  return (\r\n    <svg\r\n      height=\"20\"\r\n      width=\"20\"\r\n      className=\"inline-block mr-2 cursor-pointer md:hidden \"\r\n      version=\"1.1\"\r\n      id=\"Layer_1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"-184.32 -184.32 880.64 880.64\"\r\n      fill=\"#000000\"\r\n    >\r\n      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\">\r\n        <rect\r\n          x=\"-184.32\"\r\n          y=\"-184.32\"\r\n          width=\"880.64\"\r\n          height=\"880.64\"\r\n          rx=\"440.32\"\r\n          fill=\"#000040\"\r\n          strokeWidth=\"0\"\r\n        />\r\n      </g>\r\n\r\n      <g\r\n        id=\"SVGRepo_tracerCarrier\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n\r\n      <g id=\"SVGRepo_iconCarrier\">\r\n        <path\r\n          style={{ fill: \"#ffffff\" }}\r\n          d=\"M384.955,256l120.28-120.28c9.019-9.019,9.019-23.642,0-32.66L408.94,6.765 c-9.019-9.019-23.642-9.019-32.66,0l-120.28,120.28L135.718,6.765c-9.019-9.019-23.642-9.019-32.66,0L6.764,103.058 c-9.019,9.019-9.019,23.642,0,32.66l120.28,120.28L6.764,376.28c-9.019,9.019-9.019,23.642,0,32.66l96.295,96.294 c9.019,9.019,23.642,9.019,32.66,0l120.28-120.28l120.28,120.28c9.019,9.019,23.642,9.019,32.66,0l96.295-96.294 c9.019-9.019,9.019-23.642,0-32.66L384.955,256z\"\r\n        />{\" \"}\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\nexport function Tick() {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      className=\"fill-[#4fd364]\"\r\n      width=\"18\"\r\n      height=\"18\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M9 16.172l10.594-10.594 1.406 1.406-12 12-5.578-5.578 1.406-1.406z\"></path>\r\n    </svg>\r\n  );\r\n}\r\nexport function Cross() {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      className=\"fill-[#f74c4a]\"\r\n      width=\"18\"\r\n      height=\"18\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M18.984 6.422l-5.578 5.578 5.578 5.578-1.406 1.406-5.578-5.578-5.578 5.578-1.406-1.406 5.578-5.578-5.578-5.578 1.406-1.406 5.578 5.578 5.578-5.578z\"></path>\r\n    </svg>\r\n  );\r\n}\r\nexport function Right() {\r\n  return (\r\n    <svg aria-hidden=\"true\" fill=\"white\" viewBox=\"0 0 24 24\" className=\"c01125\">\r\n      <path d=\"M9 16.172l10.594-10.594 1.406 1.406-12 12-5.578-5.578 1.406-1.406z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function Wrong() {\r\n  return (\r\n    <svg aria-hidden=\"true\" fill=\"white\" viewBox=\"0 0 24 24\" className=\"c01125\">\r\n      <path d=\"M18.984 6.422l-5.578 5.578 5.578 5.578-1.406 1.406-5.578-5.578-5.578 5.578-1.406-1.406 5.578-5.578-5.578-5.578 1.406-1.406 5.578 5.578 5.578-5.578z\"></path>\r\n    </svg>\r\n  );\r\n}\r\nexport function Ignore() {\r\n  return (\r\n    <svg aria-hidden=\"true\" fill=\"white\" viewBox=\"0 0 24 24\" className=\"c01125\">\r\n      <path d=\"M12 20.016c4.406 0 8.016-3.609 8.016-8.016 0-1.828-0.609-3.563-1.688-4.922l-11.25 11.25c1.359 1.078 3.094 1.688 4.922 1.688zM3.984 12c0 1.828 0.609 3.563 1.688 4.922l11.25-11.25c-1.359-1.078-3.094-1.688-4.922-1.688-4.406 0-8.016 3.609-8.016 8.016zM12 2.016c5.531 0 9.984 4.453 9.984 9.984s-4.453 9.984-9.984 9.984-9.984-4.453-9.984-9.984 4.453-9.984 9.984-9.984z\"></path>\r\n    </svg>\r\n  );\r\n}\r\nexport function Undo() {\r\n  return (\r\n    <svg aria-hidden=\"true\" fill=\"white\" viewBox=\"0 0 24 24\" className=\"c01125\">\r\n      <path d=\"M11.016 9l1.406 1.406-3.609 3.609h9.188v-10.031h2.016v12h-11.203l3.609 3.609-1.406 1.406-6-6z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n", "import { useRef, useEffect } from \"react\";\r\nimport { Ignore, Right, Undo, Wrong } from \"./svgs\";\r\ninterface ButtonProps {\r\n  handleClick: () => void;\r\n  value: string;\r\n  disabled: boolean;\r\n  title: string;\r\n  shortCut: string;\r\n}\r\n\r\nfunction Button({\r\n  handleClick,\r\n  value,\r\n  disabled,\r\n  title,\r\n  shortCut,\r\n}: ButtonProps) {\r\n  let classbtn = \"h-[100px] w-[100px]  cursor-pointer\";\r\n  let innerValue: any = value;\r\n  let btnRef = useRef(null);\r\n  useEffect(() => {\r\n    function handlekeyDown(e) {\r\n      if (e.key === shortCut) {\r\n        btnRef.current.click();\r\n      }\r\n    }\r\n    document.addEventListener(\"keydown\", handlekeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handlekeyDown);\r\n    };\r\n  }, []);\r\n  switch (value) {\r\n    case \"CONFIRM\":\r\n      innerValue = <Right />;\r\n      classbtn += \" bg-[--success-btn]\";\r\n      break;\r\n    case \"REJECT\":\r\n      innerValue = <Wrong />;\r\n      classbtn += \" bg-[--cancel-btn]\";\r\n      break;\r\n    case \"IGNORE\":\r\n      innerValue = <Ignore />;\r\n      classbtn += \" bg-[--normal-btn]\";\r\n      break;\r\n    case \"UNDO\":\r\n      innerValue = <Undo />;\r\n      classbtn += \" bg-[--normal-btn]\";\r\n      break;\r\n  }\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      title={title}\r\n      className={classbtn + \" hover:opacity-80\"}\r\n      onClick={handleClick}\r\n      ref={btnRef}\r\n    >\r\n      {innerValue}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n", "import { useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { editorProps } from \"~/tiptapProps/events\";\r\nimport { Character } from \"~/tiptapProps/extension/character\";\r\nimport { Space } from \"~/tiptapProps/extension/space\";\r\n\r\nexport const useEditorTiptap = (newText) => {\r\n  const setter = () => {};\r\n  const charClick = () => {};\r\n  const editor = useEditor(\r\n    {\r\n      extensions: [StarterKit, Space(setter), Character(charClick)],\r\n      content: newText,\r\n      editorProps,\r\n      editable: false,\r\n    },\r\n    [newText]\r\n  );\r\n  return editor;\r\n};\r\n", "const handleDOMEvents = {\r\n  keydown: (editor, event) => {\r\n    let charCode = String.fromCharCode(event.which).toLowerCase();\r\n    let copyPressed = (event.ctrlKey || event.metaKey) && charCode === \"c\";\r\n\r\n    if ([32].includes(event.keyCode)) {\r\n      let btn = document.getElementById(\"spaceButton\");\r\n      btn?.click();\r\n    }\r\n    if (![37, 38, 39, 40].includes(event.keyCode) && !copyPressed) {\r\n      event.preventDefault();\r\n    }\r\n  },\r\n  textInput: (v, evt) => {\r\n    evt.preventDefault();\r\n  },\r\n  drop: (v, e) => {\r\n    e.preventDefault();\r\n  },\r\n  dragstart: (v, e) => {\r\n    e.preventDefault();\r\n  },\r\n  paste: (v, event) => {\r\n    event.preventDefault();\r\n  },\r\n};\r\n\r\nconst editorProps = {\r\n  handleDOMEvents: handleDOMEvents,\r\n  attributes: {\r\n    inputmode: \"none\",\r\n  },\r\n};\r\nexport { editorProps };\r\n", "import { getMarkRange, Mark, mergeAttributes } from \"@tiptap/core\";\r\nimport { Plugin, TextSelection } from \"prosemirror-state\";\r\nimport { removeSpace, replaceSpacesWithHTMLTag } from \"../../lib/utils\";\r\nexport interface optionType {\r\n  multicolor: boolean;\r\n  HTMLAttributes: Record<string, any>;\r\n}\r\n// declare module \"@tiptap/core\" {\r\n//   interface Commands<ReturnType> {\r\n//     Space: {\r\n//       /**\r\n//        * Set a highlight mark\r\n//        */\r\n//     //   setSpace: (attributes?: { color: string }) => ReturnType;\r\n//       /**\r\n//        * Toggle a highlight mark\r\n//        */\r\n//     //   toggleSpace: (attributes?: { color: string }) => ReturnType;\r\n//       /**\r\n//        * Unset a highlight mark\r\n//        */\r\n//     //   unsetSpace: () => ReturnType;\r\n//     //   replaceSpace: (term: string) => ReturnType;\r\n//     };\r\n//   }\r\n// }\r\n\r\nexport const Character = (charClick) =>\r\n  Mark.create({\r\n    name: \"Character\",\r\n\r\n    addOptions() {\r\n      return {\r\n        multicolor: false,\r\n        HTMLAttributes: {},\r\n      };\r\n    },\r\n\r\n    addAttributes() {\r\n      return {\r\n        class: {\r\n          default: \"segment\",\r\n        },\r\n      };\r\n    },\r\n\r\n    parseHTML() {\r\n      return [\r\n        {\r\n          tag: \"Character\",\r\n        },\r\n      ];\r\n    },\r\n\r\n    renderHTML({ HTMLAttributes }) {\r\n      return [\r\n        \"span\",\r\n        mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\r\n        0,\r\n      ];\r\n    },\r\n\r\n    // addCommands() {\r\n    //   return {\r\n    //     setSpace:\r\n    //       (attributes) =>\r\n    //       ({ commands }) => {\r\n    //         return commands.setMark(this.name, attributes);\r\n    //       },\r\n    //     toggleSpace:\r\n    //       (attributes) =>\r\n    //       ({ commands }) => {\r\n    //         return commands.toggleMark(this.name, attributes);\r\n    //       },\r\n    //     unsetSpace:\r\n    //       () =>\r\n    //       ({ commands }) => {\r\n    //         return commands.unsetMark(this.name);\r\n    //       },\r\n    //   };\r\n    // },\r\n    // addProseMirrorPlugins(this) {\r\n    //   return [\r\n    //     new Plugin({\r\n    //       props: {\r\n    //         handleClick: (view, pos, event) => {\r\n    //           const { schema, doc, tr } = view.state;\r\n    //           if (pos < 0 || pos > doc.content.size) {\r\n    //             return false;\r\n    //           }\r\n    //           const range = getMarkRange(\r\n    //             doc.resolve(pos),\r\n    //             schema.marks.Character\r\n    //           );\r\n    //           if (!range) return false;\r\n\r\n    //           const [$start, $end] = [\r\n    //             doc.resolve(range.from),\r\n    //             doc.resolve(range.to),\r\n    //           ];\r\n\r\n    //           view.dispatch(tr.setSelection(new TextSelection($start, $end)));\r\n\r\n    //           charClick();\r\n    //           return true;\r\n    //         },\r\n    //       },\r\n    //     }),\r\n    //   ];\r\n    // },\r\n  });\r\nexport declare const Highlight: Mark<optionType, any>;\r\n", "import { getMarkRange, Mark, mergeAttributes } from \"@tiptap/core\";\r\nimport { Plugin, TextSelection } from \"prosemirror-state\";\r\nimport { removeSpace, replaceSpacesWithHTMLTag } from \"../../lib/utils\";\r\nimport insertHTMLonText from \"~/lib/insertHtmlOnText\";\r\nexport interface optionType {\r\n  multicolor: boolean;\r\n  HTMLAttributes: Record<string, any>;\r\n}\r\ndeclare module \"@tiptap/core\" {\r\n  interface Commands<ReturnType> {\r\n    Space: {\r\n      /**\r\n       * Set a highlight mark\r\n       */\r\n      setSpace: (attributes?: { color: string }) => ReturnType;\r\n      /**\r\n       * Toggle a highlight mark\r\n       */\r\n      toggleSpace: (attributes?: { color: string }) => ReturnType;\r\n      /**\r\n       * Unset a highlight mark\r\n       */\r\n      unsetSpace: () => ReturnType;\r\n      replaceSpace: (term: string) => ReturnType;\r\n    };\r\n  }\r\n}\r\nexport const replace = (replace, editor, dispatch) => {\r\n  dispatch(editor.state.tr.insertText(replace, 1, 3));\r\n};\r\nexport const Space = (setter) =>\r\n  Mark.create({\r\n    name: \"Space\",\r\n    addOptions() {\r\n      return {\r\n        multicolor: false,\r\n        HTMLAttributes: {},\r\n      };\r\n    },\r\n    addAttributes() {\r\n      return {\r\n        class: {\r\n          default: \"space\",\r\n        },\r\n      };\r\n    },\r\n    parseHTML() {\r\n      return [\r\n        {\r\n          tag: \"Space\",\r\n        },\r\n      ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n      return [\r\n        \"span\",\r\n        mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\r\n        0,\r\n      ];\r\n    },\r\n    addCommands() {\r\n      return {\r\n        setSpace:\r\n          (attributes) =>\r\n          ({ commands }) => {\r\n            return commands.setMark(this.name, attributes);\r\n          },\r\n        toggleSpace:\r\n          (attributes) =>\r\n          ({ commands }) => {\r\n            return commands.toggleMark(this.name, attributes);\r\n          },\r\n        unsetSpace:\r\n          () =>\r\n          ({ commands }) => {\r\n            return commands.unsetMark(this.name);\r\n          },\r\n      };\r\n    },\r\n    addProseMirrorPlugins(this) {\r\n      return [\r\n        new Plugin({\r\n          props: {\r\n            handleClick: (view, pos, event) => {\r\n              const { schema, doc, tr } = view.state;\r\n              if (pos < 0 || pos > doc.content.size) {\r\n                return false;\r\n              }\r\n              const range = getMarkRange(doc.resolve(pos), schema.marks.Space);\r\n              if (!range) return false;\r\n              setter();\r\n\r\n              const [$start, $end] = [\r\n                doc.resolve(range.from),\r\n                doc.resolve(range.to),\r\n              ];\r\n              view.dispatch(tr.setSelection(new TextSelection($start, $end)));\r\n              let content = this.editor.getText();\r\n              let modifiedContent =\r\n                content.substring(0, $start.pos - 1) +\r\n                content.substring($end.pos - 1);\r\n              let newText = insertHTMLonText(modifiedContent);\r\n              if (removeSpace(modifiedContent) === removeSpace(content)) {\r\n                this.editor.commands.setContent(newText);\r\n                this.editor.commands.unsetSpace();\r\n              }\r\n              return true;\r\n            },\r\n          },\r\n        }),\r\n      ];\r\n    },\r\n  });\r\nexport declare const Highlight: Mark<optionType, any>;\r\n", "import { ActionFunction, redirect } from \"@remix-run/node\";\r\nimport { sendNotification } from \"~/lib/server.sendDiscordNotification\";\r\nimport {\r\n  getNumberOfReject,\r\n  ignoreText,\r\n  rejectText,\r\n  removeRejectText,\r\n  saveText,\r\n  updateTextRejectCount,\r\n} from \"~/model/text\";\r\nimport {\r\n  getUser,\r\n  remainingTextToApproved,\r\n  updateUserAssign,\r\n} from \"~/model/user\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  let headerUrl = request.headers.get(\"referer\") as string;\r\n  let url = new URL(headerUrl);\r\n  let session = url.searchParams.get(\"session\") as string;\r\n  let history = url.searchParams.get(\"history\");\r\n  let text = null;\r\n  let user = await getUser(session);\r\n  let admin_id = formData.get(\"adminId\") as string;\r\n\r\n  if (request.method === \"POST\") {\r\n    const modified_text = formData.get(\"modified_text\") as string;\r\n    const userId = formData.get(\"userId\") as string;\r\n    const id = formData.get(\"id\") as string;\r\n    await removeRejectText(parseInt(id), userId, \"APPROVED\");\r\n    text = await saveText(parseInt(id), modified_text, userId, admin_id);\r\n\r\n    let { remaining_count, not_reviewed_count } = await remainingTextToApproved(\r\n      userId\r\n    );\r\n    if (remaining_count === 0 && !admin_id) {\r\n      sendNotification(\r\n        user?.username,\r\n        `A batch is ready to review by ${user?.nickname}`,\r\n        \"success\"\r\n      );\r\n    }\r\n    if (not_reviewed_count === 0 && admin_id) {\r\n      sendNotification(\r\n        user?.username,\r\n        \"batch is reviewed, user will get new batch now\",\r\n        \"success\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (request.method === \"PATCH\") {\r\n    const id = formData.get(\"id\") as string;\r\n    const userId = formData.get(\"userId\") as string;\r\n    const action = formData.get(\"_action\") as string;\r\n    if (action === \"reject\") {\r\n      await updateTextRejectCount(parseInt(id));\r\n      let numberOfReject = await getNumberOfReject(parseInt(id));\r\n      if (numberOfReject !== 0 && numberOfReject % 3 === 0) {\r\n        await updateUserAssign(userId, false);\r\n      }\r\n      text = await rejectText(parseInt(id), userId);\r\n    }\r\n    if (action === \"ignore\") {\r\n      await removeRejectText(parseInt(id), userId, \"PENDING\");\r\n      text = await ignoreText(parseInt(id), userId);\r\n    }\r\n  }\r\n  if (history) {\r\n    return redirect(`/?session=${session}`);\r\n  }\r\n  return text;\r\n};\r\n", "import webhook from \"webhook-discord\";\r\n\r\nexport async function sendNotification(\r\n  username: string,\r\n  message: string,\r\n  type: \"success\" | \"fail\"\r\n) {\r\n  let webhookUrl = process.env.DISCORD_WEBHOOK_URL;\r\n  const Hook = new webhook.Webhook(webhookUrl!);\r\n  if (type === \"success\") {\r\n    Hook.success(username, message);\r\n  } else if (type === \"fail\") {\r\n    Hook.warn(username, message);\r\n  }\r\n}\r\n", "import { db } from \"~/service/db.server\";\r\n\r\nexport const getAllUniqueBatches = async () => {\r\n  try {\r\n    const texts = await db.text.findMany({\r\n      select: {\r\n        batch: true,\r\n      },\r\n      orderBy: {\r\n        batch: \"asc\",\r\n      },\r\n    });\r\n\r\n    // Extracting the batch numbers\r\n    const batches = texts.map((text) => text.batch);\r\n\r\n    // Getting unique batch numbers\r\n    const uniqueBatches = [...new Set(batches)];\r\n    return uniqueBatches;\r\n  } catch (error) {\r\n    console.error(\"An error occurred while fetching unique batches:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllAssignedBatches = async () => {\r\n  try {\r\n    const users = await db.user.findMany({\r\n      select: {\r\n        assigned_batch: true,\r\n      },\r\n    });\r\n\r\n    // Extracting the assigned batches\r\n    const allBatches = users.flatMap((user) => user.assigned_batch);\r\n\r\n    // Getting unique batch numbers\r\n    const uniqueAssignedBatches = [...new Set(allBatches)];\r\n\r\n    return uniqueAssignedBatches;\r\n  } catch (error) {\r\n    console.error(\"An error occurred while fetching assigned batches:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUnassignedBatch = async (userId: string) => {\r\n  try {\r\n    const allBatches = await getAllUniqueBatches();\r\n    const assignedBatches = await getAllAssignedBatches();\r\n    const userWithIgnoredText = await db.user.findMany({\r\n      where: {\r\n        NOT: { id: userId },\r\n      },\r\n      select: { ignored_list: true },\r\n    });\r\n    const ignoredTextbatches =\r\n      userWithIgnoredText.flatMap((user) =>\r\n        user.ignored_list.map((item) => parseInt(item.batch + \"\"))\r\n      ) || [];\r\n    // // check if any assigned batch contain ignored text\r\n    let assigned_text_reviewed_contain_ignore = await db.text.findMany({\r\n      where: {\r\n        batch: { in: ignoredTextbatches },\r\n      },\r\n    });\r\n    let filtered = assigned_text_reviewed_contain_ignore.find(\r\n      (item) => !item.reviewed\r\n    );\r\n    if (filtered) return filtered?.batch;\r\n    // Finding the batches that are not assigned\r\n    const unassignedBatches = allBatches\r\n      .filter((batch) => !assignedBatches.includes(batch))\r\n      .sort((a, b) => parseInt(a) - parseInt(b));\r\n\r\n    return unassignedBatches[0];\r\n  } catch (error) {\r\n    console.error(\r\n      \"An error occurred while fetching unassigned batches:\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n", "import { Status, User } from \"@prisma/client\";\r\nimport { db } from \"~/service/db.server\";\r\nimport { getUnassignedBatch } from \"./group\";\r\nimport { sendNotification } from \"~/lib/server.sendDiscordNotification\";\r\n\r\nexport async function checkAndAssignBatch(userId: string) {\r\n  try {\r\n    let batchToAssign = null;\r\n    // 1. Retrieve the user's current assigned batches (if any)\r\n    const user = await db.user.findUnique({\r\n      where: { id: userId },\r\n      select: {\r\n        username: true,\r\n        assigned_batch: true,\r\n        ignored_list: true,\r\n      },\r\n    });\r\n    let assigned_batch = user?.assigned_batch;\r\n    if (!user) return null;\r\n    if (assigned_batch?.length === 0) {\r\n      batchToAssign = await getUnassignedBatch(userId);\r\n    } else {\r\n      let textsInBatch = await db.text.findMany({\r\n        where: {\r\n          batch: { in: user.assigned_batch },\r\n        },\r\n        select: {\r\n          status: true,\r\n          modified_text: true,\r\n          batch: true,\r\n          reviewed: true,\r\n        },\r\n      });\r\n      for (const batch of user.assigned_batch) {\r\n        let batchList = textsInBatch.filter((item) => item.batch === batch);\r\n        // If there is any text with a null modified_text, return false\r\n        if (batchList.some((text) => text.modified_text === null)) {\r\n          return batch;\r\n        }\r\n        if (\r\n          batchList.some(\r\n            (text) => text.status === null || text.status === \"PENDING\"\r\n          )\r\n        ) {\r\n          return batch;\r\n        }\r\n      }\r\n      //check if all assigned batch is reviewed\r\n      const allReviewed = textsInBatch.every((item) => item.reviewed);\r\n\r\n      if (!batchToAssign && allReviewed) {\r\n        batchToAssign = await getUnassignedBatch(userId);\r\n      }\r\n    }\r\n    // 3. Assign the batch to the user\r\n    if (!batchToAssign) return null;\r\n    if (!user?.assigned_batch?.includes(batchToAssign)) {\r\n      const updatedUser = await db.user.update({\r\n        where: { id: userId },\r\n        data: {\r\n          assigned_batch: {\r\n            set: [...(user?.assigned_batch || []), batchToAssign],\r\n          },\r\n        },\r\n      });\r\n    }\r\n    return batchToAssign;\r\n  } catch (error) {\r\n    console.error(\r\n      \"An error occurred while checking and assigning batch:\",\r\n      error\r\n    );\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getTextToDisplay(userId: string, history: any) {\r\n  if (history) {\r\n    const text = await db.text.findUnique({\r\n      where: { id: parseInt(history) },\r\n    });\r\n    let show = text?.modified_text\r\n      ? JSON.parse(text?.modified_text).join(\" \")\r\n      : text?.original_text;\r\n    return {\r\n      ...text,\r\n      id: text?.id,\r\n      original_text: show,\r\n      status: text?.status,\r\n    };\r\n  }\r\n  let batch = await checkAndAssignBatch(userId);\r\n  const user = await db.user.findUnique({\r\n    where: { id: userId },\r\n    include: {\r\n      ignored_list: true,\r\n      rejected_list: true,\r\n    },\r\n  });\r\n  const rejectedIds = user?.rejected_list.map((item: any) => item.id);\r\n  let text = await db.text.findFirst({\r\n    where: {\r\n      batch: batch,\r\n      OR: [{ status: null }, { status: \"PENDING\" }],\r\n      id: {\r\n        notIn: [...(rejectedIds || [])],\r\n      },\r\n    },\r\n    orderBy: {\r\n      id: \"asc\",\r\n    },\r\n  });\r\n  if (!text) return null;\r\n  return text;\r\n}\r\n\r\nexport function getTextToDisplayByUser(userid: string) {\r\n  let allTextByUser = db.text.findMany({\r\n    where: {\r\n      modified_by_id: userid,\r\n    },\r\n    select: {\r\n      id: true,\r\n      status: true,\r\n      modified_text: true,\r\n    },\r\n  });\r\n  return allTextByUser;\r\n}\r\nexport async function getProgress() {\r\n  try {\r\n    let total = await db.text.findMany();\r\n    let reviewed = await db.text.findMany({\r\n      where: { reviewed: true },\r\n    });\r\n    return { total: total.length, reviewed: reviewed.length };\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n}\r\n\r\nexport async function rejectText(id: number, userId: string) {\r\n  let text = await db.text.update({\r\n    where: {\r\n      id,\r\n    },\r\n    data: {\r\n      status: \"REJECTED\",\r\n      modified_by: { disconnect: { id: userId } },\r\n      rejected_by: { connect: { id: userId } },\r\n      reviewed: false,\r\n    },\r\n  });\r\n  return text;\r\n}\r\nexport async function removeRejectText(\r\n  id: number,\r\n  userId: string,\r\n  status: Status\r\n) {\r\n  let text = db.text.update({\r\n    where: {\r\n      id,\r\n    },\r\n    data: {\r\n      status,\r\n      rejected_by: { disconnect: { id: userId } },\r\n    },\r\n  });\r\n  let user = db.user.update({\r\n    where: {\r\n      id: userId,\r\n    },\r\n    data: {\r\n      text: {\r\n        connect: { id },\r\n      },\r\n    },\r\n  });\r\n  return text;\r\n}\r\n\r\nexport async function ignoreText(id: number, userId: string) {\r\n  return db.text.update({\r\n    where: {\r\n      id,\r\n    },\r\n    data: {\r\n      modified_by: { disconnect: { id: userId } },\r\n      ignored_by: { connect: { id: userId } },\r\n      status: \"PENDING\",\r\n      modified_text: null,\r\n    },\r\n  });\r\n}\r\nexport function saveText(\r\n  id: number,\r\n  text: string,\r\n  userId: string,\r\n  adminId: string\r\n) {\r\n  return db.text.update({\r\n    where: {\r\n      id,\r\n    },\r\n    data: {\r\n      modified_text: JSON.stringify(text.split(\" \")),\r\n      modified_by_id: userId,\r\n      status: \"APPROVED\",\r\n      rejected_by: { disconnect: { id: userId } },\r\n      reviewed: !!adminId,\r\n      reviewed_by_id: adminId || null,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function getAprovedBatch() {\r\n  let data = await db.text.findMany({\r\n    select: {\r\n      batch: true,\r\n    },\r\n  });\r\n  const uniqueGroups = new Set();\r\n  const result = {};\r\n  data.forEach((item) => {\r\n    uniqueGroups.add(item.batch);\r\n  });\r\n  let text_group = await db.text.findMany({\r\n    where: {\r\n      batch: { in: Array.from(uniqueGroups) },\r\n    },\r\n    select: {\r\n      id: true,\r\n      status: true,\r\n      batch: true,\r\n      ignored_by: true,\r\n      reviewed: true,\r\n    },\r\n  });\r\n  for (const item of uniqueGroups) {\r\n    let text = text_group.filter((t) => t.batch === item);\r\n    let approved = text.every((item) => item.status === \"APPROVED\");\r\n    let reviewed = text.every((item) => item.reviewed === true);\r\n    let rejected = text.some((item) => item.status === \"REJECTED\");\r\n\r\n    result[item] = { approved, rejected, reviewed };\r\n  }\r\n\r\n  return result;\r\n}\r\nexport async function getNumberOfReject(id: number) {\r\n  try {\r\n    let text = await db.text.findUnique({\r\n      where: { id },\r\n      select: { reject_count: true },\r\n    });\r\n    return text?.reject_count || 0;\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n}\r\nexport async function updateTextRejectCount(id: number) {\r\n  try {\r\n    let text = await db.text.update({\r\n      where: { id },\r\n      data: {\r\n        reject_count: { increment: 1 },\r\n      },\r\n    });\r\n    return text?.reject_count || 0;\r\n  } catch (e) {\r\n    throw new Error(e);\r\n  }\r\n}\r\n", "import { Role } from \"@prisma/client\";\r\nimport { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { getUsers, updateUserNickname, updateUserAssign } from \"~/model/user\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  return { users: await getUsers() };\r\n};\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  let formdata = await request.formData();\r\n  let nickname = formdata.get(\"nickname\") as string;\r\n  let id = formdata.get(\"id\") as string;\r\n  let allow = formdata.get(\"allow\") as string;\r\n  let action = formdata.get(\"action\") as string;\r\n  if (action === \"change_nickname\") {\r\n    let updated = await updateUserNickname(id, nickname);\r\n    return updated;\r\n  }\r\n  if (action === \"change_allow_assign\") {\r\n    let updated = await updateUserAssign(id, allow === \"true\");\r\n    return updated;\r\n  }\r\n\r\n  return null;\r\n};\r\n", "import { LoaderFunction } from \"@remix-run/node\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  let url = new URL(request.url);\r\n  let sentence = url.searchParams.get(\"sentence\");\r\n  let dakjeurl = \"https://dakje.io/api/tokenize\";\r\n  let body = JSON.stringify({\r\n    content: sentence,\r\n  });\r\n  let res = await fetch(dakjeurl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\", // Set the content type based on your API requirements\r\n    },\r\n    body,\r\n  });\r\n  let data = await res.json();\r\n  let join_word = data.words.map((item) => item.form).join(\" \");\r\n  return join_word;\r\n};\r\n", "import {\n  redirect,\n  type LinksFunction,\n  type LoaderFunction,\n  type V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { useEffect, useRef } from \"react\";\nimport { useFetcher, useLoaderData, useRevalidator } from \"@remix-run/react\";\nimport { useEditor } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Button from \"~/components/Button\";\nimport Editor from \"~/components/Editor.client\";\nimport Sidebar from \"~/components/Sidebar\";\nimport { getTextToDisplay, getTextToDisplayByUser } from \"~/model/text\";\nimport { Space } from \"~/tiptapProps/extension/space\";\nimport { Character } from \"~/tiptapProps/extension/character\";\nimport { editorProps } from \"~/tiptapProps/events\";\nimport checkUnknown from \"~/lib/checkUnknown\";\nimport { createUserIfNotExists } from \"~/model/user\";\nimport insertHTMLonText from \"~/lib/insertHtmlOnText\";\nimport { ClientOnly } from \"remix-utils\";\nimport { useEditorTiptap } from \"~/tiptapProps/useEditorTiptap\";\nimport { useSocket } from \"~/components/contexts/SocketContext\";\nimport { sendNotification } from \"~/lib/server.sendDiscordNotification\";\nexport const loader: LoaderFunction = async ({ request }) => {\n  let { NODE_ENV } = process.env;\n  let url = new URL(request.url);\n  let session = url.searchParams.get(\"session\");\n  let history = url.searchParams.get(\"history\") || null;\n  if (!session) {\n    return redirect(\"/error\");\n  } else {\n    let user = await createUserIfNotExists(session);\n    let text = null;\n    if (user.allow_assign) {\n      text = await getTextToDisplay(user?.id, history);\n    }\n    return { text, user, NODE_ENV, history };\n  }\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"Pecha Tools\" },\n    { name: \"description\", content: \"Word segmentation\" },\n  ];\n};\nexport default function Index() {\n  let fetcher = useFetcher();\n  const data = useLoaderData();\n  const text = data?.text?.original_text.trim() || \"\";\n  let dialogref = useRef(null);\n  let user = data.user;\n  let insertHTML = insertHTMLonText(text);\n  let newText = checkUnknown(insertHTML);\n  let editor = useEditorTiptap(newText);\n  const socket = useSocket();\n  const revalidate = useRevalidator();\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\"change-allow\", (data) => {\n      if (data.user.id === user.id) revalidate.revalidate();\n    });\n    socket.on(\"reviewed\", (data) => {\n      if (data.user.id === user.id) revalidate.revalidate();\n    });\n  }, [socket]);\n\n  let saveText = async () => {\n    let modified_text = editor!.getText();\n    let id = data.text.id;\n    fetcher.submit(\n      { id, modified_text, userId: user.id },\n      { method: \"POST\", action: \"/api/text\" }\n    );\n    socket?.emit(\"text-status-changed\", { user });\n  };\n  let undoTask = async () => {\n    let text = checkUnknown(insertHTMLonText(data?.text?.original_text));\n    editor?.commands.setContent(text);\n  };\n\n  let rejectTask = async () => {\n    let id = data.text.id;\n    fetcher.submit(\n      { id, userId: user.id, _action: \"reject\" },\n      { method: \"PATCH\", action: \"/api/text\" }\n    );\n    socket?.emit(\"text-status-changed\", { user });\n  };\n\n  let isButtonDisabled = !data.text || data.text.reviewed;\n\n  if (data.error) return <div>{data.error}</div>;\n  return (\n    <div className=\"flex flex-col md:flex-row\">\n      <Sidebar user={data.user} text={data.text} />\n\n      <div className=\"flex-1 flex items-center flex-col md:mt-[10vh] \">\n        {!data.text ? (\n          <div className=\"fixed top-[150px] md:static shadow-md max-h-[450px] w-[90%] rounded-sm text-center py-4\">\n            {!user.allow_assign && (\n              <div className=\"font-bold first-letter:uppercase first-letter:text-red-400\">\n                A single work must have been rejected 3 times or more . please\n                contact admin .\n              </div>\n            )}\n            Thank you . your work is complete ! \uD83D\uDE0A\uD83D\uDE0A\uD83D\uDE0A\n            <br />\n            {user?.rejected_list?.length > 0 ? (\n              <div>you have some rejected work,please visit them</div>\n            ) : (\n              <div>once work are reviewed , you will be assigned new work</div>\n            )}\n          </div>\n        ) : (\n          <div className=\"fixed bottom-[150px] md:static shadow-md max-h-[450px] w-[90%] rounded-sm md:h-[54vh]\">\n            <div className=\"flex items-center justify-between opacity-75 text-sm font-bold px-2 capitalize pt-1 \">\n              <div>transcript</div>\n\n              <div\n                onClick={() => dialogref.current?.showModal()}\n                className=\"cursor-pointer\"\n              >\n                reference\n              </div>\n              <dialog ref={dialogref} className=\"modal\">\n                <form method=\"dialog\" className=\"modal-box p-0\">\n                  <iframe\n                    className=\"w-full h-[80vh]\"\n                    src=\"https://docs.google.com/spreadsheets/d/1ZdkguvvvWiqZoEh4LLbceYsnHubBDpAAdi4DToFN9I0/edit?usp=sharing\"\n                  ></iframe>\n                </form>\n                <form method=\"dialog\" className=\"modal-backdrop\">\n                  <button>close</button>\n                </form>\n              </dialog>\n            </div>\n            <ClientOnly fallback={null}>\n              {() => <Editor editor={editor!} />}\n            </ClientOnly>\n            {!editor && <div>loading...</div>}\n          </div>\n        )}\n        {data.text && (\n          <div className=\"flex gap-2 fixed bottom-0 justify-center \">\n            <Button\n              disabled={isButtonDisabled}\n              handleClick={saveText}\n              value=\"CONFIRM\"\n              title=\"CONFIRM (a)\"\n              shortCut=\"a\"\n            />\n            <Button\n              disabled={isButtonDisabled}\n              handleClick={rejectTask}\n              value=\"REJECT\"\n              title=\"REJECT (x)\"\n              shortCut=\"x\"\n            />\n            {/* <Button\n            disabled={isButtonDisabled}\n            handleClick={ignoreTask}\n            value=\"IGNORE\"\n            title=\"IGNORE (i)\"\n            shortCut=\"i\"\n          /> */}\n            <Button\n              disabled={isButtonDisabled}\n              handleClick={undoTask}\n              value=\"UNDO\"\n              title=\"UNDO (backspace)\"\n              shortCut=\"Backspace\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport TextInfo from \"./TextInfo\";\r\nimport { HistoryItem } from \"./History\";\r\nimport { sortUpdate_reviewed } from \"~/lib/sortReviewedUpdate\";\r\nimport { Cross, Crossburger, Hamburger, Tick } from \"./svgs\";\r\nimport { useOnlineCount } from \"./hooks/useOnlineCount\";\r\nimport type { User, Text } from \"@prisma/client\";\r\n\r\nexport type historyText = {\r\n  id: number;\r\n  reviewed: boolean;\r\n};\r\ntype userType = {\r\n  user: User & { text: any[]; rejected_list: any[] };\r\n  text: Text;\r\n};\r\n\r\nfunction Sidebar({ user, text }: userType) {\r\n  const onlineCount = useOnlineCount();\r\n  let [openMenu, setOpenMenu] = useState(false);\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\" flex px-2 py-3 text-white bg-gray-600 text-lg font-semibold items-center  gap-2 \">\r\n        <div onClick={() => setOpenMenu((p) => !p)}>\r\n          {!openMenu ? <Hamburger /> : <Crossburger />}\r\n        </div>\r\n        Word Segmentation\r\n      </div>\r\n      <div\r\n        className={`flex flex-col text-white bg-[#54606e] overflow-y-auto overflow-x-hidden max-h-[100vh] transition-all -translate-x-full z-30 ${\r\n          openMenu ? \"block translate-x-0\" : \"\"\r\n        } min-h-[100vh] w-[260px] md:translate-x-0`}\r\n      >\r\n        <div className=\"px-2 flex gap-2 flex-col border-b-2 border-b-[#384451] mb-3 pb-2 mt-2 \">\r\n          {user.role === \"ADMIN\" && (\r\n            <Link\r\n              to={`/admin?session=${user?.username}`}\r\n              className=\"decoration-0 text-white bg-gray-500 h-fit px-2 py-1 rounded-sm\"\r\n            >\r\n              ADMIN\r\n            </Link>\r\n          )}\r\n          <TextInfo>User : {user?.username.split(\"@\")[0]}</TextInfo>\r\n          <TextInfo>text id :{text?.id}</TextInfo>\r\n          <TextInfo>Batch : {text?.batch}</TextInfo>\r\n          <TextInfo>Approved : {user?.text?.length}</TextInfo>\r\n          <TextInfo>Rejected :{user?.rejected_list?.length}</TextInfo>\r\n          <TextInfo>Online:{onlineCount}</TextInfo>\r\n          <TextInfo>\r\n            Reviewed : {user?.text.filter((r) => r.reviewed)?.length}\r\n          </TextInfo>\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"text-sm mb-2 font-bold\">History</div>\r\n          <div className=\"flex flex-col gap-2 max-h-[30vh] overflow-y-auto\">\r\n            {user &&\r\n              user?.rejected_list?.length > 0 &&\r\n              (user?.rejected_list || [])\r\n                .sort(sortUpdate_reviewed)\r\n                .map((text: historyText) => (\r\n                  <HistoryItem\r\n                    user={user}\r\n                    id={text?.id}\r\n                    key={text.id + \"-rejected\"}\r\n                    onClick={() => setOpenMenu(false)}\r\n                    icon={<Cross />}\r\n                  />\r\n                ))}\r\n            {(user?.text || [])\r\n              .sort(sortUpdate_reviewed)\r\n              .map((text: historyText) => (\r\n                <HistoryItem\r\n                  user={user}\r\n                  id={text?.id}\r\n                  key={text.id + \"-accepted\"}\r\n                  onClick={() => setOpenMenu(false)}\r\n                  disabled={text?.reviewed}\r\n                  icon={\r\n                    <div className=\"flex items-center justify-between flex-1\">\r\n                      <Tick />\r\n                      {text?.reviewed && <span>reviewed</span>}\r\n                    </div>\r\n                  }\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n", "import { useEffect, useState } from \"react\";\r\nimport { useSocket } from \"../contexts/SocketContext\";\r\n\r\nexport function useOnlineCount() {\r\n  const [onlineCount, setOnlineCount] = useState(0);\r\n  const socket = useSocket();\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"count\", (data) => {\r\n      setOnlineCount(data);\r\n    });\r\n  }, [socket]);\r\n\r\n  return onlineCount;\r\n}\r\n", "import { User } from \"@prisma/client\";\r\nimport { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\r\nimport {\r\n  Link,\r\n  useFetcher,\r\n  useLoaderData,\r\n  useRevalidator,\r\n} from \"@remix-run/react\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { getAprovedBatch, getProgress } from \"~/model/text\";\r\nimport { getUser, getUsers, removeBatchFromUser } from \"~/model/user\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { useSocket } from \"~/components/contexts/SocketContext\";\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  let url = new URL(request.url);\r\n  let session = url.searchParams.get(\"session\");\r\n  if (!session) return redirect(\"/error\");\r\n  let user: User | null = await getUser(session);\r\n  let users: User[] = await getUsers();\r\n  let groups = await getAprovedBatch();\r\n  let progress = await getProgress();\r\n  return { user, users, groups, progress };\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  let formdata = await request.formData();\r\n  if (request.method === \"DELETE\") {\r\n    let batch = formdata.get(\"batch\") as string;\r\n    let userId = formdata.get(\"id\") as string;\r\n    let removed = await removeBatchFromUser(parseInt(batch), userId);\r\n    return removed;\r\n  }\r\n};\r\nfunction admin() {\r\n  let { user, users, progress } = useLoaderData();\r\n  let [search, setSearch] = useState(\"\");\r\n  let dashboardRef = useRef<HTMLDialogElement>(null);\r\n  users = users.sort(\r\n    (a, b) => b.assigned_batch.length - a.assigned_batch.length\r\n  );\r\n  let colorScheme = [\r\n    { color: \"bg-blue-300\", text: \"Ready\" },\r\n    { color: \"bg-red-300\", text: \"Some Rejected\" },\r\n    { color: \"bg-green-300\", text: \"All Accepted\" },\r\n  ];\r\n  let list = users.filter((data) => data.username.includes(search));\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"flex flex-col justify-between md:flex-row gap-4\">\r\n        <div className=\"flex gap-2\">\r\n          <Link to={`/?session=${user.username}`} className=\"btn\">\r\n            Home\r\n          </Link>\r\n          <button\r\n            className=\"btn p-2\"\r\n            onClick={() => dashboardRef?.current?.showModal()}\r\n          >\r\n            Dashboard\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"tooltip tooltip-bottom\"\r\n          data-tip={`${progress.reviewed} / ${progress.total}`}\r\n        >\r\n          <div className=\"md:text-center\">Progress</div>\r\n\r\n          <progress\r\n            className=\"progress progress-success w-56\"\r\n            max={progress.total}\r\n            value={progress.reviewed}\r\n          ></progress>\r\n        </div>\r\n        <dialog id=\"my_modal_3\" ref={dashboardRef} className=\"modal\">\r\n          <form method=\"dialog\" className=\"modal-box w-11/12 max-w-5xl\">\r\n            <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\r\n              \u2715\r\n            </button>\r\n            <iframe\r\n              src=\"https://metabase.pecha.tools/public/dashboard/4e6afb12-9c15-48cc-afd4-61e52887ad80\"\r\n              style={{ border: 0, width: \"100%\", height: \"80vh\" }}\r\n              allowTransparency\r\n            ></iframe>\r\n          </form>\r\n        </dialog>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          {colorScheme?.map((data) => {\r\n            return (\r\n              <div className=\"flex gap-2 items-center\" key={data.color}>\r\n                <span\r\n                  className={`inline-block w-4 h-4 rounded-full ${data.color} border-2 border-gray-300]`}\r\n                ></span>\r\n                {data.text}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <h2>Users:</h2>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        placeholder=\"search\"\r\n        className=\"input input-bordered w-full max-w-xs\"\r\n      />\r\n      {users.length > 0 && (\r\n        <div className=\"overflow-x-auto max-h-[80dvh] overflow-y-scroll\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>User</th>\r\n                <th>Role</th>\r\n                <th>Active</th>\r\n                <th>Approved/Reviewed</th>\r\n                <th>Assigned Jobs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {list.map((user: User) => (\r\n                <Users user={user} key={user.id} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default admin;\r\n\r\nfunction Users({ user }: { user: User }) {\r\n  let { groups, user: Admin } = useLoaderData();\r\n  const socket = useSocket();\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const inputRef = useRef(null);\r\n  let url = `/admin/${user.username}?session=${Admin.username}`;\r\n  const fetcher = useFetcher();\r\n  const userfetcher = useFetcher();\r\n  const reviewed_count = user?.text.filter((item) => item.reviewed).length;\r\n  const approved_count = user.text.length;\r\n  const reval = useRevalidator();\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"text-status-changed\", (data) => {\r\n      reval.revalidate();\r\n    });\r\n  }, [socket]);\r\n\r\n  function handleSubmit() {\r\n    let value = inputRef.current?.value;\r\n    if (!value) return;\r\n    fetcher.submit(\r\n      {\r\n        id: user.id,\r\n        nickname: value,\r\n        action: \"change_nickname\",\r\n      },\r\n      {\r\n        action: \"/api/user\",\r\n        method: \"POST\",\r\n      }\r\n    );\r\n    setOpenEdit(false);\r\n  }\r\n  function handleChangeAllow() {\r\n    fetcher.submit(\r\n      {\r\n        id: user.id,\r\n        allow: !user.allow_assign,\r\n        action: \"change_allow_assign\",\r\n      },\r\n      {\r\n        action: \"/api/user\",\r\n        method: \"POST\",\r\n      }\r\n    );\r\n    socket?.emit(\"change-allow\", { user });\r\n  }\r\n\r\n  let removeBatch = (e) => {\r\n    if (groups[e].rejected) {\r\n      alert(\r\n        \"group contain rejected data, contact the annotator to either ignore or accept!\"\r\n      );\r\n      return null;\r\n    }\r\n    let c = confirm(\"Are you sure you want to remove this group from user?\");\r\n\r\n    if (c)\r\n      userfetcher.submit(\r\n        { batch: e, id: user.id },\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n  };\r\n\r\n  let removing =\r\n    userfetcher.formData?.get(\"id\") === user.id &&\r\n    fetcher.formMethod === \"DELETE\";\r\n  return (\r\n    <tr>\r\n      <td className=\"flex gap-2\">\r\n        <div className=\"flex gap-2\">\r\n          {!openEdit ? (\r\n            <>\r\n              {fetcher?.formData?.get(\"nickname\") || user.nickname}\r\n              <button onClick={() => setOpenEdit(true)}>\r\n                <FiEdit2 />\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={user.nickname!}\r\n                name=\"nickname\"\r\n                ref={inputRef}\r\n                className=\"input input-xs input-bordered w-full max-w-xs\"\r\n              />\r\n              <button type=\"button\" onClick={handleSubmit}>\r\n                <TiTick color=\"green\" size={24} />\r\n              </button>\r\n              <button type=\"button\" onClick={() => setOpenEdit(false)}>\r\n                <ImCross color=\"red\" size={20} />\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        (\r\n        <Link to={url} style={{ textDecoration: \"none\", color: \"inherit\" }}>\r\n          {user.username}\r\n        </Link>\r\n        )\r\n      </td>\r\n      <td>{user.role}</td>\r\n      <td>\r\n        <input\r\n          type=\"checkbox\"\r\n          className={`toggle toggle-success ${\r\n            fetcher.state !== \"idle\" &&\r\n            \"cursor-not-allowed opacity-50 pointer-events-non\"\r\n          }`}\r\n          checked={user?.allow_assign!}\r\n          onChange={handleChangeAllow}\r\n          aria-label=\"Toggle_role\"\r\n        />\r\n      </td>\r\n      <td>\r\n        {approved_count}/{reviewed_count}\r\n      </td>\r\n      <td className=\"flex gap-2 \">\r\n        {user.assigned_batch.map((item) => {\r\n          return (\r\n            <span\r\n              className=\" text-black  mr-1 cursor-pointer p-1 border-2 rounded border-gray-300\"\r\n              onClick={() => removeBatch(item)}\r\n              key={item}\r\n              style={{\r\n                background: groups[item].reviewed\r\n                  ? \"lightgreen\"\r\n                  : groups[item].approved\r\n                  ? \"lightblue\"\r\n                  : groups[item].rejected\r\n                  ? \"pink\"\r\n                  : \"white\",\r\n              }}\r\n            >\r\n              {item}\r\n            </span>\r\n          );\r\n        })}\r\n        {removing && <div>wait</div>}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n", "export const loader = () => {\r\n  return null;\r\n};\r\nfunction error() {\r\n  return <div>error no session ,require session to continue</div>;\r\n}\r\n\r\nexport default error;\r\n", "import { Editor, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { useRef, useState } from \"react\";\r\nimport Button from \"~/components/Button\";\r\nimport Sidebar from \"~/components/demo/Sidebar\";\r\nimport { Character } from \"~/tiptapProps/extension/character\";\r\nimport { editorProps } from \"~/tiptapProps/events\";\r\nimport { Space } from \"~/tiptapProps/extension/space\";\r\nimport EditorContainer from \"~/components/Editor.client\";\r\nimport { LoaderFunction } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { db } from \"~/service/db.server\";\r\nimport insertHTMLonText from \"~/lib/insertHtmlOnText\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  let url = new URL(request.url);\r\n  let text = await db.text.findMany({\r\n    take: 10,\r\n    select: { original_text: true, id: true },\r\n  });\r\n\r\n  return { text };\r\n};\r\n\r\ntype UserType = {\r\n  username: string;\r\n  role: string;\r\n  text: { id: number; content: string | undefined }[];\r\n  rejected_list: { id: number }[];\r\n  ignored_list: { id: number }[];\r\n};\r\n\r\nfunction DemoPage() {\r\n  const { text } = useLoaderData();\r\n  const [text_Array, setTextArray] = useState(text);\r\n  const [user, setUser] = useState<UserType>({\r\n    username: \"demo\",\r\n    role: \"USER\",\r\n    text: [],\r\n    rejected_list: [],\r\n    ignored_list: [],\r\n  });\r\n  const [history, setHistory] = useState(null);\r\n  const dialogref = useRef(null);\r\n  let content =\r\n    text_Array.find(\r\n      (i: { id: string }) =>\r\n        ![...user.text, ...user.rejected_list].find((j) => j.id == i.id)\r\n    ) || null;\r\n  if (history) {\r\n    content =\r\n      user.text.find((i) => i.id === history) ||\r\n      text_Array.find((i: { id: string }) => i.id == history);\r\n  }\r\n  let original_text = content.content || content?.original_text.trim();\r\n  let insertHTML = insertHTMLonText(original_text);\r\n\r\n  let setter = () => {};\r\n  let charClick = () => {};\r\n  const editor = useEditor(\r\n    {\r\n      extensions: [StarterKit, Space(setter), Character(charClick)],\r\n      content: insertHTML,\r\n      editorProps,\r\n      editable: false,\r\n    },\r\n    [insertHTML]\r\n  );\r\n  const saveText = () => {\r\n    let content_text = editor?.getText();\r\n    if (history) {\r\n      if (user.rejected_list.some((item) => item.id === history)) {\r\n        setUser((prev) => ({\r\n          ...prev,\r\n          rejected_list: prev.rejected_list.filter(\r\n            (item) => item.id != history\r\n          ),\r\n          text: [...prev.text, { id: history, content: content_text }],\r\n        }));\r\n      }\r\n      setHistory(null);\r\n    } else {\r\n      setUser({\r\n        ...user,\r\n        text: [...user.text, { id: content.id, content: content_text }],\r\n      });\r\n      setHistory(null);\r\n    }\r\n  };\r\n  const rejectTask = () => {\r\n    if (history) {\r\n      if (user.text.some((item) => item.id === history)) {\r\n        setUser((prev) => ({\r\n          ...prev,\r\n          text: prev.text.filter((item) => item.id != history),\r\n          rejected_list: [...prev.rejected_list, { id: history }],\r\n        }));\r\n      }\r\n      setHistory(null);\r\n    } else {\r\n      setUser({\r\n        ...user,\r\n        rejected_list: [...user.rejected_list, { id: content.id }],\r\n      });\r\n      setHistory(null);\r\n    }\r\n  };\r\n  const undoTask = () => {\r\n    let text = insertHTMLonText(content.original_text);\r\n    editor?.commands.setContent(text);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row\">\r\n      <Sidebar user={user} text={text} setHistory={setHistory} />\r\n\r\n      <div className=\"flex-1 flex items-center flex-col md:mt-[10vh] \">\r\n        {!content ? (\r\n          <div>Thank you . your work is complete ! \uD83D\uDE0A\uD83D\uDE0A\uD83D\uDE0A</div>\r\n        ) : (\r\n          <div className=\"fixed bottom-[150px] md:static shadow-md max-h-[450px] w-[90%] rounded-sm md:h-[54vh]\">\r\n            <div className=\"flex items-center justify-between opacity-75 text-sm font-bold px-2 capitalize pt-1 \">\r\n              <div>transcript</div>\r\n\r\n              <div\r\n                onClick={() => dialogref.current?.showModal()}\r\n                className=\"cursor-pointer\"\r\n              >\r\n                reference\r\n              </div>\r\n              <dialog ref={dialogref} className=\"modal\">\r\n                <form method=\"dialog\" className=\"modal-box p-0\">\r\n                  <iframe\r\n                    className=\"w-full h-[80vh]\"\r\n                    src=\"https://docs.google.com/spreadsheets/d/1ZdkguvvvWiqZoEh4LLbceYsnHubBDpAAdi4DToFN9I0/edit?usp=sharing\"\r\n                  ></iframe>\r\n                </form>\r\n                <form method=\"dialog\" className=\"modal-backdrop\">\r\n                  <button>close</button>\r\n                </form>\r\n              </dialog>\r\n            </div>\r\n            {!editor ? (\r\n              <div>loading...</div>\r\n            ) : (\r\n              <EditorContainer editor={editor!} />\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"flex gap-2 fixed bottom-0 justify-center \">\r\n          <Button\r\n            disabled={false}\r\n            handleClick={saveText}\r\n            value=\"CONFIRM\"\r\n            title=\"CONFIRM (a)\"\r\n            shortCut=\"a\"\r\n          />\r\n          <Button\r\n            disabled={false}\r\n            handleClick={rejectTask}\r\n            value=\"REJECT\"\r\n            title=\"REJECT (x)\"\r\n            shortCut=\"x\"\r\n          />\r\n          <Button\r\n            disabled={false}\r\n            handleClick={undoTask}\r\n            value=\"UNDO\"\r\n            title=\"UNDO (backspace)\"\r\n            shortCut=\"Backspace\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DemoPage;\r\n", "import { Link, useFetcher, useLoaderData } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport { sortUpdate_reviewed } from \"~/lib/sortReviewedUpdate\";\r\nimport { Cross, Hamburger, Tick } from \"../svgs\";\r\nimport TextInfo from \"../TextInfo\";\r\nimport { DemoHistoryItem } from \"../History\";\r\n\r\nexport type historyText = {\r\n  id: number;\r\n  reviewed: boolean;\r\n};\r\n\r\nfunction Sidebar({ user, text, setHistory }) {\r\n  let [openMenu, setOpenMenu] = useState(false);\r\n\r\n  function SidebarHeader() {\r\n    return (\r\n      <div className=\"flex bg-[#384451] px-2 py-3 items-center justify-between md:hidden \">\r\n        <div>About</div>\r\n        <div className=\"cursor-pointer p-2\" onClick={() => setOpenMenu(false)}>\r\n          x\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div\r\n        className=\" flex px-2 py-3 text-white bg-gray-600 text-lg font-semibold items-center  gap-2 \"\r\n        onClick={() => setOpenMenu(true)}\r\n      >\r\n        <Hamburger />\r\n        Word Segmentation\r\n      </div>\r\n      <div\r\n        className={`flex flex-col text-white bg-[#54606e] overflow-y-auto overflow-x-hidden max-h-[100vh] transition-all -translate-x-full z-30 ${\r\n          openMenu ? \"block translate-x-0\" : \"\"\r\n        } min-h-[100vh] w-[260px] md:translate-x-0`}\r\n      >\r\n        <div className=\"px-2 flex gap-2 flex-col border-b-2 border-b-[#384451] mb-3 pb-2 mt-2 \">\r\n          <SidebarHeader />\r\n          {user.role === \"ADMIN\" && (\r\n            <Link\r\n              to={`/admin?session=${user?.username}`}\r\n              className=\"decoration-0 text-white bg-gray-500 h-fit px-2 py-1 rounded-sm\"\r\n            >\r\n              ADMIN\r\n            </Link>\r\n          )}\r\n          <TextInfo>User : {user?.username}</TextInfo>\r\n          <TextInfo>text id :{text?.id}</TextInfo>\r\n          <TextInfo>Batch : {text?.batch}</TextInfo>\r\n          <TextInfo>Approved : {user?.text?.length}</TextInfo>\r\n          <TextInfo>Rejected :{user?.rejected_list?.length}</TextInfo>\r\n          <TextInfo>Ignored : {user?.ignored_list?.length}</TextInfo>\r\n          <TextInfo>\r\n            Reviewed : {user?.text.filter((r) => r.reviewed)?.length}\r\n          </TextInfo>\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"text-sm mb-2 font-bold\">History</div>\r\n          <div className=\"flex flex-col gap-2 max-h-[30vh] overflow-y-auto\">\r\n            {user &&\r\n              (user.rejected_list || user.text) &&\r\n              (user?.rejected_list || [])\r\n                .sort(sortUpdate_reviewed)\r\n                .map((text: historyText) => (\r\n                  <DemoHistoryItem\r\n                    user={user}\r\n                    id={text?.id}\r\n                    key={text.id + \"-accepted\"}\r\n                    onClick={() => {\r\n                      setOpenMenu(false);\r\n                      setHistory(text.id);\r\n                    }}\r\n                    icon={<Cross />}\r\n                  />\r\n                ))}\r\n            {(user?.text || [])\r\n              .sort(sortUpdate_reviewed)\r\n              .map((text: historyText) => (\r\n                <DemoHistoryItem\r\n                  user={user}\r\n                  id={text?.id}\r\n                  key={text.id + \"-rejected\"}\r\n                  onClick={() => {\r\n                    setOpenMenu(false);\r\n                    setHistory(text.id);\r\n                  }}\r\n                  disabled={text?.reviewed}\r\n                  icon={\r\n                    <div className=\"flex items-center justify-between flex-1\">\r\n                      <Tick />\r\n                      {text?.reviewed && <span>reviewed</span>}\r\n                    </div>\r\n                  }\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n", "export default {'entry':{'module':'/build/entry.client-G7JOO27U.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-GVK3FNSX.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-UENAGXQR.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-7X65AYRH.js','imports':['/build/_shared/chunk-DFM272FG.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-IOYYOQV2.js','imports':['/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-QBCE5T6G.js','/build/_shared/chunk-TND25XQH.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-LTIZPMOI.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin_.$slug':{'id':'routes/admin_.$slug','parentId':'root','path':'admin/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin_.$slug-BPCNDBLW.js','imports':['/build/_shared/chunk-HUA6FSZE.js','/build/_shared/chunk-QBCE5T6G.js','/build/_shared/chunk-TND25XQH.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.text':{'id':'routes/api.text','parentId':'root','path':'api/text','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.text-A4DRPZQ7.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.user':{'id':'routes/api.user','parentId':'root','path':'api/user','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.user-7BYWHH7L.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.user.$username':{'id':'routes/api.user.$username','parentId':'routes/api.user','path':':username','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.user.$username-K3HPPKXU.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.word':{'id':'routes/api.word','parentId':'root','path':'api/word','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.word-JTVRFTHW.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/demo':{'id':'routes/demo','parentId':'root','path':'demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/demo-3WQB3JOR.js','imports':['/build/_shared/chunk-HUA6FSZE.js','/build/_shared/chunk-TND25XQH.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/error':{'id':'routes/error','parentId':'root','path':'error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/error-QFS7PSXJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'ed7c69de','hmr':{'runtime':'/build/_shared\\\\chunk-UENAGXQR.js','timestamp':1693402890191},'url':'/build/manifest-ED7C69DE.js'};", "\nimport * as entryServer from \"D:\\\\work\\\\pecha-tool-for-word-segmentation\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/api.user.$username.tsx\";\nimport * as route2 from \"./routes/admin_.$slug.tsx\";\nimport * as route3 from \"./routes/api.text.tsx\";\nimport * as route4 from \"./routes/api.user.tsx\";\nimport * as route5 from \"./routes/api.word.tsx\";\nimport * as route6 from \"./routes/_index.tsx\";\nimport * as route7 from \"./routes/admin.tsx\";\nimport * as route8 from \"./routes/error.tsx\";\nimport * as route9 from \"./routes/demo.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api.user.$username\": {\n      id: \"routes/api.user.$username\",\n      parentId: \"routes/api.user\",\n      path: \":username\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/admin_.$slug\": {\n      id: \"routes/admin_.$slug\",\n      parentId: \"root\",\n      path: \"admin/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/api.text\": {\n      id: \"routes/api.text\",\n      parentId: \"root\",\n      path: \"api/text\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/api.user\": {\n      id: \"routes/api.user\",\n      parentId: \"root\",\n      path: \"api/user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/api.word\": {\n      id: \"routes/api.word\",\n      parentId: \"root\",\n      path: \"api/word\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/error\": {\n      id: \"routes/error\",\n      parentId: \"root\",\n      path: \"error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/demo\": {\n      id: \"routes/demo\",\n      parentId: \"root\",\n      path: \"demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    }\n  };"],
  "mappings": "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",
  "names": ["module", "isbot", "error", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "socket", "error", "loader", "import_react", "splitText", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "data", "import_react", "import_jsx_dev_runtime", "import_react", "import_core", "StarterKit", "import_jsx_dev_runtime", "loader", "admin", "saveText", "EditorContainer", "import_node", "webhook", "error", "error", "text", "item", "action", "action", "loader", "loader", "action", "loader", "loader", "import_node", "import_react", "import_Editor", "import_react", "import_react", "import_jsx_dev_runtime", "text", "import_remix_utils", "import_jsx_dev_runtime", "loader", "data", "saveText", "_a", "text", "Editor", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "user", "_a", "loader", "import_jsx_dev_runtime", "loader", "import_react", "import_starter_kit", "import_react", "import_jsx_dev_runtime", "Sidebar", "text", "Sidebar_default", "import_Editor", "import_react", "import_jsx_dev_runtime", "loader", "StarterKit", "Sidebar_default", "EditorContainer", "text"]
}
